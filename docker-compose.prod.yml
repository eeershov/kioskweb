# docker-compose --file docker-compose.prod.yml up --build

version: '3.9'

services:
  npmanager:
    container_name: nginxpm
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      # These ports are in format <host-port>:<container-port>
      - '80:80' # Public HTTP Port
      - '443:443' # Public HTTPS Port
      - '81:81' # Admin Web Port
    networks:
      - backendapp_net
      - umami_net
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt

  backendapp:
    container_name: backend
    restart: always
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    ports:
      - 8080:8080
    environment:
      TZ: 'Europe/Moscow'
      NODE_ENV: production
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TP_API_URL: ${TP_API_URL}
      TP_API_TOKEN: ${TP_API_TOKEN}
      TP_orgIdKiosk: ${TP_orgIdKiosk}
      TP_orgIdGrky: ${TP_orgIdGrky}
      TP_orgIdStand: ${TP_orgIdStand}
      TP_orgId52: ${TP_orgId52}
    networks:
      - backendapp_net
    depends_on:
      - db

  clientapp:
    container_name: client
    restart: always
    build:
      context: ./client
      dockerfile: Dockerfile.prod
    ports:
      - 3000:3000
    networks:
      - backendapp_net
    depends_on:
      - backendapp

  db:
    container_name: database
    restart: always
    image: postgres:15.2-alpine
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./backend/src/database/migrations/dbinit.sql:/docker-entrypoint-initdb.d/dbinit.sql
    mem_limit: 512m
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: "-E UTF8 --lc-collate='ru_RU.utf8' --lc-ctype='ru_RU.utf8'"
      PGTZ: 'Europe/Moscow'
      TZ: 'Europe/Moscow'
    ports:
      - 127.0.0.1:5432:5432
    networks:
      - backendapp_net


  umami:
    container_name: umami
    image: ghcr.io/umami-software/umami:postgresql-latest
    ports:
      - "3001:3000"
    environment:
      DATABASE_URL: ${UMAMI_DATABASE_URL}
      DATABASE_TYPE: postgresql
      APP_SECRET: ${UMAMI_APP_SECRET}
    depends_on:
      - umami_db
    networks:
      - umami_net
    restart: always

  umami_db:
    image: postgres:15-alpine
    ports:
      - "127.0.0.1:5433:5432"
    environment:
      POSTGRES_DB: ${UMAMI_POSTGRES_DB}
      POSTGRES_USER: ${UMAMI_POSTGRES_USER}
      POSTGRES_PASSWORD: ${UMAMI_POSTGRES_PASS}
    volumes:
      - ./sql/schema.postgresql.sql:/docker-entrypoint-initdb.d/schema.postgresql.sql:ro
      - umami-db-data:/var/lib/postgresql/data
    networks:
      - umami_net
    restart: always

volumes:
  db_data:
  umami-db-data:

networks:
  backendapp_net:
  umami_net:
